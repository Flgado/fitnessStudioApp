// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Joao Folgado",
            "url": "https://github.com/Flgado",
            "email": "jfolgado94@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/fitnessstudio/classes": {
            "get": {
                "description": "Returns a list of classes optionally filtered by various parameters. If no filters as pass returns all classes.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classes"
                ],
                "summary": "Get classes with optional filters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by class name",
                        "name": "class_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter classes with start date greater than or equal to the specified date. Format: RFC3339",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter classes with end date less than or equal to the specified date. Format: RFC3339",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter classes with capacity greater than or equal to the specified value",
                        "name": "capacity_gte",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter classes with capacity less than or equal to the specified value",
                        "name": "capacity_le",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter classes with number of registrations greater than or equal to the specified value",
                        "name": "num_registrations_gte",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter classes with number of registrations less than or equal to the specified value",
                        "name": "num_registrations_le",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ReadClass"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new class with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classes"
                ],
                "summary": "Add a new class",
                "parameters": [
                    {
                        "description": "Class details (all fields are required)",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ClassScheduler"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Class added successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing required fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/fitnessstudio/classes/{class-id}": {
            "get": {
                "description": "Get a class by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classes"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "class ID",
                        "name": "classId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ReadClass"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Update a Class",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Classes"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Class ID",
                        "name": "classId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Class data to update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateClass"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/fitnessstudio/users": {
            "get": {
                "description": "Get all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "description": "User data to create",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/fitnessstudio/users/{user-id}": {
            "get": {
                "description": "Get a user by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Update a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User data to update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CreateUser": {
            "description": "CreateUser",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "Update": {
            "description": "UpdateUser Information",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "User": {
            "description": "UserModel",
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.ClassScheduler": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "end_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "api.ReadClass": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "num_registrations": {
                    "type": "integer"
                }
            }
        },
        "api.UpdateClass": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "integer"
                        },
                        "details": {
                            "type": "string"
                        },
                        "message": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "path": {
                            "type": "string"
                        },
                        "suggestion": {
                            "type": "string"
                        },
                        "timestamp": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "utils.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "\"App to book\"",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
