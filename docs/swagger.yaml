definitions:
  CreateUser:
    description: CreateUser
    properties:
      name:
        maxLength: 50
        type: string
    required:
    - name
    type: object
  User:
    description: UserModel
    properties:
      id:
        maximum: 50
        type: integer
      name:
        type: string
    required:
    - id
    type: object
  api.ClassBooked:
    properties:
      class_date:
        type: string
      class_id:
        type: integer
      class_name:
        type: string
      reserved_date:
        type: string
    type: object
  api.ClassScheduler:
    properties:
      capacity:
        type: integer
      end_date:
        type: string
      name:
        maxLength: 50
        type: string
      start_date:
        type: string
    required:
    - end_date
    - name
    - start_date
    type: object
  api.MakeBooking:
    properties:
      class_id:
        type: integer
      user_id:
        type: integer
    type: object
  api.PatchClass:
    properties:
      capacity:
        type: integer
      date:
        type: string
      id:
        type: integer
      name:
        maxLength: 50
        type: string
    type: object
  api.ReadClass:
    properties:
      capacity:
        type: integer
      date:
        type: string
      id:
        type: integer
      name:
        type: string
      num_registrations:
        type: integer
    type: object
  api.UsersBooked:
    properties:
      class_id:
        type: integer
      user_id:
        type: integer
      user_name:
        type: string
    type: object
  handlers.ErrorResponse:
    properties:
      error:
        properties:
          code:
            type: integer
          details:
            type: string
          message:
            additionalProperties:
              type: string
            type: object
          path:
            type: string
          suggestion:
            type: string
          timestamp:
            type: string
        type: object
    type: object
host: localhost:8080
info:
  contact:
    email: jfolgado94@gmail.com
    name: Joao Folgado
    url: https://github.com/Flgado
  description: '"App to book"'
  version: "1"
paths:
  /v1/fitnessstudio/bookings:
    post:
      description: Booking a class
      parameters:
      - description: Booking body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.MakeBooking'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - Bookings
  /v1/fitnessstudio/bookings/classes/{classId}/users:
    get:
      description: Return the list of users who have booked the class.
      parameters:
      - description: Class Id
        in: path
        name: classId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/api.UsersBooked'
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a list of users who have booked the class.
      tags:
      - Bookings
  /v1/fitnessstudio/bookings/users/{userId}/classes:
    get:
      description: Returns a list of classes booked by user
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/api.ClassBooked'
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get the list of classes by user
      tags:
      - Bookings
  /v1/fitnessstudio/classes:
    get:
      description: Returns a list of classes, optionally filtered by various parameters.
        If no filters are passed, it returns all classes.
      parameters:
      - description: Filter by class name
        in: query
        name: className
        type: string
      - description: 'Filter classes with start date greater than or equal to the
          specified date. Format: dddd-dd-dd'
        in: query
        name: startDate
        type: string
      - description: 'Filter classes with end date less than or equal to the specified
          date. Format: dddd-dd-dd'
        in: query
        name: endDate
        type: string
      - description: Filter classes with capacity greater than or equal to the specified
          value
        in: query
        name: capacityGte
        type: integer
      - description: Filter classes with capacity less than or equal to the specified
          value
        in: query
        name: capacityLe
        type: integer
      - description: Filter classes with number of registrations greater than or equal
          to the specified value
        in: query
        name: numRegistrationsGte
        type: integer
      - description: Filter classes with number of registrations less than or equal
          to the specified value
        in: query
        name: numRegistrationsLe
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/api.ReadClass'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get classes with optional filters
      tags:
      - Classes
    patch:
      description: Update class.
      parameters:
      - description: Class data to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.PatchClass'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - Classes
    post:
      consumes:
      - application/json
      description: |-
        Creates new classes using the provided details. New classes will be created for each day within the range specified by the start date and end date.
        If any of these days are unavailable, the endpoint will return the corresponding classes, indicating that scheduling was not possible
      parameters:
      - description: Class details (all fields are required, dates in the format YYYY-MM-DD)
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.ClassScheduler'
      produces:
      - application/json
      responses:
        "200":
          description: 'message": "All Classes Created With Success", "Not Possible
            To Scheduler": array<api.Class>}'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create multiple classes.
      tags:
      - Classes
  /v1/fitnessstudio/classes/{classId}:
    get:
      description: Get a class by ID
      parameters:
      - description: Class ID
        in: path
        name: classId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ReadClass'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - Classes
  /v1/fitnessstudio/users:
    get:
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - Users
    patch:
      description: Update a user
      parameters:
      - description: User data to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - Users
    post:
      description: Create a new user.
      parameters:
      - description: User data to create
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CreateUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - Users
  /v1/fitnessstudio/users/{userId}:
    get:
      description: Get a user by ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - Users
swagger: "2.0"
